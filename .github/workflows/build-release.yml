name: Build and Release EXE (Offline/Portable)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement.txt
          pip install pyinstaller

      - name: Download DECIMER model in cache and copy to project
        run: |
          python -c "
          import os 
          from DECIMER import predict_SMILES 
          import shutil
          from pathlib import Path

          # Génère un PNG minimal pour déclencher le download du modèle
          dummy = 'dummy.png'
          with open(dummy, 'wb') as f:
              f.write(b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x01\x00\x00\x00\x01\x08\x06\x00\x00\x00\x1f\x15\xc4\x89\x00\x00\x00\nIDATx\xdacd\xf8\x0f\x00\x01\x05\x01\x02\xa2Z\xb2\x00\x00\x00\x00IEND\xaeB`\x82')
          
          try:
              predict_SMILES(dummy)
          except Exception:
              pass  # On s'en fiche, c'est juste pour télécharger le modèle
          
          decimer_cache = Path.home() / '.cache' / 'decimer'
          if not decimer_cache.exists():
              raise RuntimeError(f'Impossible de trouver le cache DECIMER dans {decimer_cache}')
          target = Path('models/decimer')
          if target.exists():
              shutil.rmtree(target)
          shutil.copytree(decimer_cache, target)
          print(f'Modèles copiés de {decimer_cache} vers {target}')
          "

      - name: Build exe with PyInstaller (offline + modèles)
        run: |
          pyinstaller --onefile main.py --add-data "models/decimer;models/decimer"

      - name: Move EXE to artifact root
        run: |
          move dist\main.exe main.exe

      - name: Upload exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: ocsr-app-exe
          path: main.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Version offline : l’exécutable contient tous les modèles et dépendances, aucune connexion internet nécessaire.
          files: main.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
